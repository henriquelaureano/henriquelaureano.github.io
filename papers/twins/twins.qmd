---
title: "TREC & KREC of twins: Decomposing the covariance matrix"
author:
  - Henrique Aparecido Laureano^[Instituto de Pesquisa
                                 Pelé Pequeno Príncipe,
                                 Curitiba, Paraná, Brazil]
  - Wagner Hugo Bonat^[Laboratório de
                       Estatística e Geoinformação,
                       Universidade Federal do Paraná,
                       Curitiba, Paraná, Brazil]
  - Stéfanne Maria Jeha Bortoletto^[Faculdades Pequeno Príncipe &
                                    Instituto de Pesquisa
                                    Pelé Pequeno Príncipe,
                                    Curitiba, Paraná, Brazil]
  - Carolina Cardoso de Mello Prando^[Faculdades
                                      Pequeno Príncipe &
                                      Instituto de Pesquisa
                                      Pelé Pequeno Príncipe,
                                      Curitiba, Paraná, Brazil]
date: August, 2022

abstract: Multivariate linear *regression* models built to handle
          multiple responses and with genetic and environmental
          interrelations of twins data [@bonat&hjelmborg] were applied
          to understand the dynamics from the TREC and KREC measures.

bibliography: /home/laureano/Git/consu/references.bib
format:
  pdf:
    echo: false
    warning: false
---

**Keywords**:

```{r}
#| label: pkgs

## setwd('papers/twins/')

if(!requireNamespace('pacman', quietly=TRUE)) install.packages('pacman')

pacman::p_load(readxl, dplyr, tidyr, haven, ggplot2, patchwork, tibble,
               kableExtra, Matrix)

## if(!requireNamespace('devtools', quietly=TRUE))
##     install.packages('devtools')
## devtools::install_github('wbonat/mglm4twin')
library(mglm4twin)

```

```{r}
#| label: data

path <- '/home/laureano/Git/carolina-I4P/trec_and_krec/'
file <- 'Dados 50k amostras.xlsx'
dat  <- readxl::read_xlsx(paste0(path, file), sheet='Gemeos')|>
    dplyr::mutate(parto=dplyr::recode(parto,
                                      'cesariana'='Cesariana',
                                      'NI'       ='Não informado'),
                  ID2  =gsub('.$', '', ID))|>
    dplyr::select(
               ID2, TREC, KREC, peso, id_gest, parto, sexo, Zigocidade
           )|>
    dplyr::filter(!Zigocidade %in% 'ERRADO' & !ID2 %in% 'PG74')|>
    dplyr::arrange(Zigocidade)|>
    dplyr::group_by(ID2)|>
    dplyr::mutate(Twin_pair =rep(c(1, 2), times=length(unique(ID2))),
                  Zigocidade=dplyr::recode(Zigocidade,
                                           'diz'='DZ', 'monoz'='MZ'))|>
    dplyr::ungroup()|>
    dplyr::select(!ID2)

n   <- nrow(dat)
N   <- dat|>
    dplyr::group_by(Zigocidade)|>
    dplyr::summarise(n=dplyr::n()/2)|>
    tidyr::spread(Zigocidade, n)

## str(dat)

```

# Introduction

# Methods

## Data

+ Weight;
+ Gestational age;
+ Type of childbirth;
+ Sex;
+ Zygosity;
+ Twin (1 or 2, to verify the randomness supposition).

Zygosity is a key term in our modeling framework since we need to inform
how many twin pairs are monozygotic and dizygotic. Therefore, we drop a
pair that do not present this information. We stay with 198 twins.

```{r}
#| label: TREC-and-KREC-plots
#| fig-width: 10
#| fig-height: 9
#| fig-cap: Graph A) TREC and KREC boxplots with their means in
#|          asterisks; Graph B) TREC and KREC scatterplot with tendency
#|          curve in solid black; Graph C) Twins scatterplots per TREC
#|          and KREC with tendency curves in solid black.
#| fig-pos: 'H'

p1 <- dat|>
    tidyr::pivot_longer(TREC:KREC, names_to='var')|>
    dplyr::mutate(var=haven::as_factor(var))|>
    ggplot()+
    aes(x=var, y=value)+
    scale_y_continuous(breaks=seq(0, 800, by=100))+
    geom_hline(yintercept=seq(0, 800, by=100),
               color     ='gray',
               linetype  ='dashed')+
    geom_boxplot(outlier.shape=21, outlier.size=2)+
    stat_summary(fun='mean', geom='point', size=3, shape=8)+
    labs(x=NULL, y=NULL)+
    theme_classic(base_size=14)+
    theme(axis.text.x=element_text(
              face  ='bold',
              size  =14,
              margin=ggplot2::unit(c(t=3, r=0, b=0, l=0), 'mm')
          ))

p2 <- dat|>
    ggplot()+
    aes(x=TREC, y=KREC)+
    scale_x_continuous(breaks=seq(0, 800, by=100))+
    scale_y_continuous(breaks=seq(0, 800, by=100))+
    geom_vline(xintercept=seq(0, 800, by=100),
               color     ='gray',
               linetype  ='dashed')+
    geom_hline(yintercept=seq(0, 800, by=100),
               color     ='gray',
               linetype  ='dashed')+
    geom_point(size=3, shape=21)+
    geom_smooth(method ='loess',
                formula=y ~ x, se=FALSE, size=1, color='black')+
    labs(x='TREC', y='KREC')+
    theme_classic(base_size=14)+
    theme(axis.title.x=element_text(face='bold'),
          axis.title.y=element_text(face='bold'))

p3 <- dplyr::bind_cols(
                 by=rep(c('TREC', 'KREC'), each=99), 
                 dplyr::bind_rows(
                            dat|>
                            dplyr::select(Twin_pair, TREC)|>
                            tidyr::pivot_wider(names_from =Twin_pair,
                                               values_from=TREC,
                                               values_fn  =list)|>
                            tidyr::unnest(c(`1`, `2`)), 
                            dat|>
                            dplyr::select(Twin_pair, KREC)|>
                            tidyr::pivot_wider(names_from =Twin_pair,
                                               values_from=KREC,
                                               values_fn  =list)|>
                            tidyr::unnest(c(`1`, `2`))
                        )
             )|>
    dplyr::mutate(by=haven::as_factor(by))|>
    ggplot()+
    aes(x=`1`, y=`2`)+
    scale_x_continuous(breaks=seq(0, 800, by=100))+
    scale_y_continuous(breaks=seq(0, 800, by=100))+
    geom_vline(xintercept=seq(0, 800, by=100),
               color     ='gray',
               linetype  ='dashed')+
    geom_hline(yintercept=seq(0, 800, by=100),
               color     ='gray',
               linetype  ='dashed')+
    geom_point(size=3, shape=21)+
    geom_smooth(method ='loess',
                formula=y ~ x, se=FALSE, size=1, color='black')+
    facet_wrap(~ by)+
    labs(x='Twin 1', y='Twin 2')+
    theme_classic(base_size=14)+
    theme(axis.title.x=element_text(face  ='bold',
                                    margin=ggplot2::unit(c(
                                                        t=3, r=0,
                                                        b=0, l=0
                                                    ), 'mm')),
          axis.title.y=element_text(face='bold'),
          strip.text.x=element_text(face='bold', size=14))

layout <- '
AABBBBB
CCCCCCC
'
p1 + p2 + p3 +
    patchwork::plot_annotation(tag_levels='A', tag_suffix=')')+
    patchwork::plot_layout(design=layout)

```

```{r}
#| label: covariate-plots
#| fig-width: 10
#| fig-height: 5.75
#| fig-cap: Graphs A) and B) are the boxplots of the numerical
#|          variables with their means in asterisks; Graphs C), D) and
#|          E) are the barplots of the categorial variables with their
#|          level frequencies and respective sample percentages.
#| fig-pos: 'H'

p1 <- dat|>
    dplyr::rename(Weight='peso')|>
    ggplot()+
    aes(x=Weight, y=' ')+
    scale_x_continuous(breaks=seq(1e3, 3750, by=250))+
    geom_vline(xintercept=seq(1e3, 3750, by=250),
               color     ='gray',
               linetype  ='dashed')+
    geom_boxplot(outlier.shape=21, outlier.size=3)+
    stat_summary(fun='mean', geom='point', size=4, shape=8)+
    labs(x=NULL, y=NULL, title='Weight')+
    theme_classic(base_size=14)+
    theme(plot.title =element_text(face='bold'),
          axis.text.x=element_text(face='bold', size=12))

p2 <- dat|>
    dplyr::rename(`Gestational age`='id_gest')|>
    ggplot()+
    aes(x=`Gestational age`, y=' ')+
    scale_x_continuous(breaks=seq(27, 40, by=1))+
    geom_vline(xintercept=seq(27, 40, by=1),
               color     ='gray',
               linetype  ='dashed')+
    geom_boxplot(outlier.shape=21, outlier.size=3)+
    stat_summary(fun='mean', geom='point', size=4, shape=8)+
    labs(x=NULL, y=NULL, title='Gestational age')+
    theme_classic(base_size=14)+
    theme(plot.title =element_text(face='bold'),
          axis.text.x=element_text(face='bold', size=12))

p3 <- dat|>
    dplyr::mutate(parto=dplyr::recode(parto, Cesariana='Cesarean'))|>
    ggplot()+
    aes(y=parto)+
    geom_bar(fill='white', color='black')+
    geom_text(stat='count',
              aes(label=paste0(..count..,
                               ' (', 100*round(..count../n, 3), '%)'
                               )),
              hjust=-0.1, fontface='bold')+
    scale_x_continuous(expand=c(0, 0), breaks=NULL, limits=c(0, 320))+
    labs(x=NULL, y=NULL, title='Type of childbirth')+
    theme_classic(base_size=14)+
    theme(axis.text.y=element_text(face='bold', size=14),
          plot.title =element_text(face='bold'))

p4 <- dat|>
    dplyr::mutate(sexo=dplyr::recode(sexo,
                                     Feminino ='Female',
                                     Masculino='Male'))|>
    ggplot()+
    aes(y=sexo)+
    geom_bar(fill='white', color='black')+
    geom_text(stat='count',
              aes(label=paste0(..count..,
                               ' (', 100*round(..count../n, 3), '%)'
                               )),
              hjust=-0.1, fontface='bold')+
    scale_x_continuous(expand=c(0, 0), breaks=NULL, limits=c(0, 190))+
    labs(x=NULL, y=NULL, title='Sex')+
    theme_classic(base_size=14)+
    theme(axis.text.y=element_text(face='bold', size=14),
          plot.title =element_text(face='bold'))

p5 <- dat|>
    ggplot()+
    aes(y=Zigocidade)+
    geom_bar(fill='white', color='black')+
    geom_text(stat='count',
              aes(label=paste0(..count..,
                               ' (', 100*round(..count../n, 3), '%)'
                               )),
              hjust=-0.1, fontface='bold')+
    scale_x_continuous(expand=c(0, 0), breaks=NULL, limits=c(0, 270))+
    labs(x=NULL, y=NULL, title='Zygosity')+
    theme_classic(base_size=14)+
    theme(axis.text.y=element_text(face='bold', size=14),
          plot.title =element_text(face='bold'))

p1 / p2 / (p3 + p4 + p5) +
    patchwork::plot_annotation(tag_levels='A', tag_suffix=')')

```

## Statistical analysis

The statistical analysis was performed through the R [@R22] language and
environment for statistical computing. The main used R packages are:
`{dplyr}` [@dplyr1.0.9], `{tidyr}` [@tidyr1.2.0], `{ggplot2}`
[@ggplot2.16], `patchwork` [@patchwork1.1.1], `{kableExtra}`
[@kableExtra1.3.4], `{Matrix}` [@matrix1.4.1] and `{mglm4twin}`
[@mglm4twin; @bonat&hjelmborg; @mcglm.seriesc; @mcglm].

# Results

We model the TREC and KREC measures in a bivariate fashion and in two
fronts, in the mean and covariance structures. We use a model called ACE
to study heritability and the genetic and environmental
relationships. Basically, we decompose the covariance matrix into three:

+ A: genetic/heritability effect or component;
+ C: common environment effect or component;
+ E: unique environment effect or component.

Besides the covariance decomposition itself, we can also insert
covariates/regressors in it. In both mean and covariance structures we
tested for the effect of six regressors.

```{r}
#| label: bivariate-models
#| fig-height: 10
#| fig-width: 10
#| results: false

## ---------------------------------------------------------------------
## all models were chosen with 194 twins but since the weight is never
## significant we dropped that variable to be able to use all 198 twins
## ---------------------------------------------------------------------

## mean linear predictors ----------------------------------------------
## form_TREC <- TREC ~ id_gest + parto + sexo + Zigocidade * Twin_pair
## form_KREC <- KREC ~ id_gest + parto + sexo + Zigocidade * Twin_pair

## ACE model -----------------------------------------------------------

## biv_ACE <- mglm4twin::mt_twin(N_DZ=N$DZ,
##                               N_MZ=N$MZ, n_resp=2, model='ACE')

## GAUSSIAN 

## fitACEbiv <-
##     mglm4twin::mglm4twin(
##                    linear_pred      =c(form_TREC, form_KREC),
##                    matrix_pred      =biv_ACE,
##                    control_algorithm=list(tuning=0.75),
##                    link             =rep('identity', 2),
##                    variance         =rep('constant', 2),
##                    power_fixed      =rep(TRUE, 2),
##                    data             =dat
##                )
## summary(fitACEbiv, model='ACE', biometric=TRUE)

## TWEEDIE

## fitACEbiv_tw <-
##     mglm4twin::mglm4twin(
##                    linear_pred      =c(form_TREC, form_KREC),
##                    matrix_pred      =biv_ACE,
##                    control_algorithm=list(tuning=0.01, max_iter=750),
##                    link             =rep(    'log', 2),
##                    variance         =rep('tweedie', 2),
##                    power_fixed      =rep(FALSE, 2),
##                    data             =dat
##                )
## summary(fitACEbiv_tw, model='ACE', biometric=TRUE)

## GAMMA

## fitACEbiv_ga <-
##     mglm4twin::mglm4twin(
##                    linear_pred      =c(form_TREC, form_KREC),
##                    matrix_pred      =biv_ACE,
##                    control_algorithm=list(tuning=0.01, max_iter=1e3),
##                    link             =rep('inverse', 2),
##                    variance         =rep('tweedie', 2),
##                    power_fixed      =rep(TRUE, 2),
##                    data             =dat
##                )
## summary(fitACEbiv_ga, model='ACE', biometric=TRUE)

## cbind(Model=c('Gaussian', 'Tweedie', 'Gamma'),
##       rbind(mglm4twin::gof(fitACEbiv),
##             mglm4twin::gof(fitACEbiv_tw),
##             mglm4twin::gof(fitACEbiv_ga)))

## par(mfrow=c(4, 2))
## 
## hist(      dat$TREC            );hist(      dat$KREC              )
## hist(resid(fitACEbiv   )[1:198]);hist(resid(fitACEbiv   )[199:396])
## hist(resid(fitACEbiv_tw)[1:198]);hist(resid(fitACEbiv_tw)[199:396])
## hist(resid(fitACEbiv_ga)[1:198]);hist(resid(fitACEbiv_ga)[199:396])
## 
## layout(1)

## AE model ------------------------------------------------------------

biv_AE <- mglm4twin::mt_twin(N_DZ=N$DZ,
                             N_MZ=N$MZ, n_resp=2, model='AE')

## GAUSSIAN

## fitAEbiv <-
##     mglm4twin::mglm4twin(
##                    linear_pred      =c(form_TREC, form_KREC),
##                    matrix_pred      =biv_AE,
##                    control_algorithm=list(tuning=0.75),
##                    link             =rep('identity', 2),
##                    variance         =rep('constant', 2),
##                    power_fixed      =rep(TRUE, 2),
##                    data             =dat
##                )
## summary(fitAEbiv, model='AE', biometric=TRUE)

## ACE vs AE `gof`s ----------------------------------------------------

## cbind(Model=c('ACE', 'AE'), rbind(mglm4twin::gof(fitACEbiv),
##                                   mglm4twin::gof( fitAEbiv)))

## FINAL MODEL ---------------------------------------------------------

## mean linear predictors ----------------------------------------------
form_TREC <- TREC ~ id_gest + sexo
form_KREC <- KREC ~ id_gest

fitAEbivf <-
    mglm4twin::mglm4twin(linear_pred      =c(form_TREC, form_KREC),
                         matrix_pred      =biv_AE,
                         control_algorithm=list(tuning=0.75), 
                         link             =rep('identity', 2),
                         variance         =rep('constant', 2),
                         power_fixed      =rep(TRUE, 2),
                         data             =dat)

## cbind(Model=c('AE initial', 'AE final'),
##       rbind(mglm4twin::gof(fitAEbiv), mglm4twin::gof(fitAEbivf)))

fitAEbiv <- fitAEbivf
tt       <- summary(fitAEbiv, model='AE', biometric=TRUE)

```

With a bivariate model, we are able to handle the TREC and KREC measures
jointly. We started with the ACE model, however, the C component
presented to be non-significant. Thus, we stayed with an AE model and
from this performed a regressors selection procedure.

```{r}
#| label: tbl-AE-bivariate-model-mean-summary
#| tbl-cap: "Summary of the mean structure of the AE bivariate model."

dplyr::bind_rows(
           cbind(
               ' '=rownames(tt[[1]][[1]]), tibble::tibble(tt[[1]][[1]])
           ),
           cbind(
               ' '=rownames(tt[[2]][[1]]), tibble::tibble(tt[[2]][[1]])
           )
       )|>
    dplyr::mutate(` `=c('Mean gestational age & female sex',
                        'A week in the gestational age',
                        'Male sex',
                        'Mean gestational age',
                        'A week in the gestational age'))|>
    dplyr::rename(Estimate ='Estimates',
                  SD       ='std.error',
                  'z-value'='z value')|>
    kableExtra::            kbl(booktabs=TRUE,
                                digits  =4,
                                caption =NA,
                                position='h')|>
    kableExtra::kable_classic_2(full_width=FALSE)|>
    kableExtra::    column_spec(5, bold=TRUE)|>
    kableExtra::      pack_rows('TREC', 1, 3)|>
    kableExtra::      pack_rows('KREC', 4, 5)

```

Starting from the mean, from the six initial regressors we end up with
two. The significant ones, for each response, are presented in
@tbl-AE-bivariate-model-mean-summary. For the TREC measures, the
statistically significant regressors are the gestational age and the
twin sex.  For KREC, only the gestational age is significant.

<!-- (`r round(var(dat$TREC), 4)`) -->
<!-- (`r round(var(dat$KREC), 4)`) -->

About the covariance, what we do is decompose the TREC variance
(13698.107), KREC variance (13787.069), and their covariance
(`r round(cov(dat$TREC, dat$KREC), 4)`) in the manner described in
@tbl-AE-bivariate-model-covariance.

```{r}
#| label: tbl-AE-bivariate-model-covariance
#| tbl-cap:
#|   "Summary of the covariance structure of the AE bivariate model."

tibble::tibble(tt$Dispersion)|>
    dplyr::mutate(' '=dplyr::recode(Parameters,
                                    'E1' ='TREC',
                                    'E2' ='KREC',
                                    'E12'='TREC & KREC',
                                    'A1' ='TREC',
                                    'A2' ='KREC',
                                    'A12'='TREC & KREC'),
                  Percentage=Estimates/rep(c(var(dat$TREC),
                                             var(dat$KREC),
                                             cov(dat$TREC, dat$KREC)),
                                           2)*100)|>
    select(!Parameters)|>
    dplyr::relocate(       ` `, .before='Estimates')|>
    dplyr::relocate(Percentage, .before='z value')|>
    dplyr::rename(Estimate ='Estimates',
                  SD       ='std.error',
                  'z-value'='z value')|>
    kableExtra::            kbl(booktabs=TRUE,
                                digits  =4,
                                caption =NA,
                                position='h')|>
    kableExtra::kable_classic_2(full_width=FALSE)|>
    kableExtra::    column_spec(6, bold=TRUE)|>
    kableExtra::      pack_rows('Environment\ncomponent (E)', 1, 3)|>
    kableExtra::      pack_rows(    'Genetic\ncomponent (A)', 4, 6)

```

At @tbl-AE-bivariate-model-genetic-components we have the environment
and heritability measures. The heritability is statistically significant
in all scenarios, marginally, jointly, and its correlation.

```{r}
#| label: tbl-AE-bivariate-model-genetic-components
#| tbl-cap:
#|   "Summary of the genetic components of the AE bivariate model."

tibble::tibble(
            cbind(' '=rep(c('TREC',
                            'KREC', 'TREC & KREC', 'Correlation'),
                          2), 
                  rbind(tt$Env_main,
                        tt$Env_cross,
                        c(0.3795164, 0.5943252, 0.6385669, 0.5231047), 
                        tt$A_main,
                        tt$A_cross,
                        c(0.2824055, 0.1397447, 2.020867, 0.04329349))
                  )
        )|>
    dplyr::rename(Estimate ='Estimates',
                  SD       ='std.error',
                  'z-value'='z value')|>
    kableExtra::            kbl(booktabs=TRUE,
                                digits  =6,
                                caption =NA,
                                position='h')|>
    kableExtra::kable_classic_2(full_width=FALSE)|>
    kableExtra::column_spec    (5, bold=TRUE)|>
    kableExtra::pack_rows      ('Environmentability', 1, 4)|>
    kableExtra::pack_rows      (      'Heritability', 5, 8)

```

Given the small sample size and the inferential level of complexity
involved in the bivariate model, we were not able to obtain numerical
convergence by inserting regressors in the covariance. As a solution, we
fitted univariate AE models with the same mean structure as in the
bivariate scenario.

```{r}
#| label: TREC-model
#| results: false

cov_TREC   <- list(formE=~ 1, formA=~ parto)
uni_AEtrec <- mglm4twin::mt_twin(N_DZ   =N$DZ,
                                 N_MZ   =N$MZ,
                                 n_resp =1,
                                 model  ='AE',
                                 formula=cov_TREC,
                                 dat    =dat)
fitAEtrec  <-
    mglm4twin::mglm4twin(linear_pred=c(form_TREC),
                         matrix_pred=uni_AEtrec,
                         link       ='identity',
                         variance   ='constant',
                         power_fixed=TRUE,
                         data       =dat)

tt         <- rbind(cbind(fitAEtrec$Covariance, 
                          sqrt(diag(fitAEtrec$vcov))[-c(1:3)])[1, ], 
                    cbind(fitAEtrec$Covariance, 
                          sqrt(diag(fitAEtrec$vcov))[-c(1:3)])[2:3, ])

```

We started with the same six regressors. In the TREC model, we end up
with no significant regressors in the environmental E component and with
the type of childbirth as significant in the genetic A component. In the
KREC model, the type of childbirth and zygosity are statistically
significant in the E component, and in the A component, only the type of
childbirth is significant. In @tbl-TREC-AE-model-covariance and
@tbl-KREC-AE-model-covariance we have a summary of the covariances
decompositions in terms of the significant regressors for the TREC and
KREC measures, respectively.

```{r}
#| label: tbl-TREC-AE-model-covariance
#| tbl-cap: "Summary of the covariance structure of the AE TREC model."

tibble::tibble(' '       =c('Environment component (E)',
                            'Cesarean childbirth',
                            'Normal childbirth'),
               Estimate  =tt[, 1],
               SD        =tt[, 2],
               Percentage=Estimate/rep(var(dat$TREC), 3)*100)|>
    kableExtra::            kbl(booktabs=TRUE,
                                digits  =4,
                                caption =NA,
                                position='h')|>
    kableExtra::kable_classic_2(full_width=FALSE)|>
    kableExtra::pack_rows      ('Genetic component (A)', 2, 3)

```

In the TREC measure (@tbl-TREC-AE-model-covariance), 26% of the observed
variance has its explanation attributed to the environment component. In
a twin born from a cesarean, 72% of the observed variance is explained
by the genetic component. Together, both components explain 98% of the
variance. In a twin born from normal childbirth, the explanation by
means of the genetic component decreases by 80% - no variance
explanation. We can justify that by the low representation in our data,
with only `r round(100*table(dat$parto)[[2]]/n, 2) `% of the twins being
born from normal childbirth.

In the KREC measure (@tbl-KREC-AE-model-covariance), in a twin born from
a cesarean and dizygotic, nothing of the observed variance is explained
by the environment component (-62%). Nevertheless, if we change to a
twin born from normal childbirth the attributed explanation grows by
66%, i.e. 4% (-62 + 66) of variance explanation. In a monozygotic twin,
the explanation by the environment component is 9% (-62 + 71). In the
genetic component, the difference in terms of variance explained by the
type of childbirth is abysmal. In a twin born from cesarean, we have
103% (-62 + 165) of variance explained. The effect is so big and
uncertain that it blows up. In a twin born from normal childbirth, we
have the opposite. The unbalance in the data frequencies ends up
generating these unrealistic results.

```{r}
#| label: KREC-model
#| results: false

cov_KREC   <- list(formE=~ parto + Zigocidade, formA=~ parto)
uni_AEkrec <- mglm4twin::mt_twin(N_DZ   =N$DZ,
                                 N_MZ   =N$MZ,
                                 n_resp =1,
                                 model  ='AE',
                                 formula=cov_KREC,
                                 dat    =dat)
fitAEkrec  <-
    mglm4twin::mglm4twin(
                   linear_pred      =c(form_KREC),
                   matrix_pred      =uni_AEkrec,
                   control_algorithm=list(tuning=0.5, max_iter=80),
                   link             ='identity',
                   variance         ='constant',
                   power_fixed      =TRUE,
                   data             =dat
               )
tt <- rbind(cbind(fitAEkrec$Covariance, 
                  sqrt(diag(fitAEkrec$vcov))[-c(1:2)])[1:3, ], 
            cbind(fitAEkrec$Covariance, 
                  sqrt(diag(fitAEkrec$vcov))[-c(1:2)])[4:5, ])

```

```{r}
#| label: tbl-KREC-AE-model-covariance
#| tbl-cap: "Summary of the covariance structure of the AE KREC model."

tibble::tibble(' '       =c('Cesarean childbirth & DZ zygosity',
                            'Normal childbirth',
                            'MZ zygosity',
                            'Cesarean childbirth', 
                            'Normal childbirth'),
               Estimate  =tt[, 1],
               SD        =tt[, 2],
               Percentage=Estimate/rep(var(dat$KREC), 5)*100)|>
    kableExtra::            kbl(booktabs=TRUE,
                                digits  =4,
                                caption =NA,
                                position='h')|>
    kableExtra::kable_classic_2(full_width=FALSE)|>
    kableExtra::pack_rows      ('Environment component (E)', 1, 3)|>
    kableExtra::pack_rows      (    'Genetic component (A)', 4, 5)

```

# References

::: {#refs}
:::

# Appendix

```{r}
#| label: gestational-age-vs-weight
#| fig-height: 3.75
#| fig-width: 4.25
#| fig-cap: Gestational age and weight scatterplot with tendency curve
#|          in solid black.
#| fig-pos: 'H'

dat|>
    ggplot()+
    aes(x=id_gest, y=peso)+
    scale_x_continuous(breaks=seq(27, 40, by=1))+
    scale_y_continuous(breaks=seq(1e3, 3750, by=250))+
    geom_vline(xintercept=seq(27, 40, by=1),
               color     ='gray',
               linetype  ='dashed')+
    geom_hline(yintercept=seq(1e3, 3750, by=250),
               color     ='gray',
               linetype  ='dashed')+
    geom_jitter(pch=21, size=2)+
    geom_smooth(method ='loess',
                formula=y ~ x, se=FALSE, color='black', size=1)+
    labs(x='Gestational age', y='Weight')+
    theme_classic()+
    theme(axis.title.x=element_text(face  ='bold',
                                    margin=ggplot2::unit(c(
                                                        t=3, r=0,
                                                        b=0, l=0
                                                    ), 'mm')),
          axis.title.y=element_text(face='bold'))

```
